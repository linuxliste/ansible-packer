---
- name: Build image with Packer
  hosts: all
  vars:
    #
    # Base configuration
    #
    packer_binary: packer.io
    packer_builder: qemu
    packer_target: rhel_9_2
    image_name: packer_image.qcow2
    disk_size: 30720

    # Build options
    do_cleanup: true
    use_force: false

    #
    # OS configuration
    #
    boot_password: "{{ image_password }}"
    root_password: "{{ image_password }}"
    # Autopartitioning does not support
    # creating BIOS/UEFI-compatible images
    bios_uefi_boot: true
    # One of: auto/custom/default/single
    partitioning: default
    disable_ipv6: true
    selinux: enforcing
    #fips_enable: true
    #security_profile: cis
    boot_parameters: net.ifnames.prefix=net quiet systemd.show_status=yes
    serial_console_setup: true

    hostname: localhost.localdomain
    ntp_servers: time.cloudflare.com
    timezone: Europe/Helsinki
    keyboard: fi

    create_admin: true
    admin_user:
      uid: 4444
      gid: 4444
      name: admin
      group: admin
      groups: wheel
      home: /home/admin
      gecos: Admin User
      #ssh_key: "ssh-rsa ... admin@image"
      passwordless_sudo: true

    root_permit_local: true
    root_permit_ssh: "prohibit-password"
    root_permit_override_security_policy: false
    #root_ssh_key: "ssh-rsa ... root@image"

    #custom_partitioning: |
    #  reqpart
    #  part /boot    --fstype xfs      --size 1024 --grow
    #  part /        --fstype xfs      --size 1024 --grow
    #  part swap     --fstype swap     --size 2048

    #custom_packages: |
    #  cloud-init
    #  cloud-utils-growpart
    #  insights-client
    #  rhc
    #  rhc-worker-playbook
    #  sos
    #  unzip
    #  zsh

    #custom_section_early: |
    #  %post --erroronfail
    #  cat /etc/resolv.conf > /var/tmp/.inst-resolv-conf
    #  %end

    #custom_section_late: |
    #  %post --erroronfail
    #  touch /.unconfigured
    #  %end

    #
    # Builder configurations
    #

    # Builder: qemu
    # https://www.packer.io/docs/builders/qemu
    qemu_binary: /usr/libexec/qemu-kvm
    output_directory: /tmp/packer_images

    # Builder: vmware
    # https://www.packer.io/docs/builders/vsphere/vsphere-iso
    #vcenter_credentials:
    #  vcenter_server: vcenter.example.com
    #  vcenter_username: vcuser
    #  vcenter_password: vcpass
    vcenter_insecure_connection: true
    vcenter_datacenter: DC1
    vcenter_folder: Linux/templates
    # https://www.packer.io/docs/builders/vsphere/vsphere-iso#working-with-clusters-and-hosts
    #vcenter_host: vcenter-host1.example.com
    vcenter_cluster: DC1-C1
    #vcenter_resource_pool: DC1-RP1
    vcenter_datastore: DC1-C1-LUN-1
    vcenter_network: DC1-C1-VLAN-123
    #vm_guest_os_type: rhel9_64Guest
    # https://www.packer.io/plugins/builders/vsphere/vsphere-iso#content-library-import-configuration
    vcenter_convert_to_template: true
    #vcenter_content_library:
    #  library: DC1-CL
    #  #name: cl-template
    #  ovf: false
    #  destroy: true

    #
    # OS installer configuration
    #
    iso:
      rhel_8:
        url: file:///VirtualMachines/boot/rhel-8.8-x86_64-dvd.iso
        checksum: sha256:517abcc67ee3b7212f57e180f5d30be3e8269e7a99e127a3399b7935c7e00a09
      rhel_8_7:
        url: file:///VirtualMachines/boot/rhel-8.7-x86_64-dvd.iso
        checksum: sha256:a6a7418a75d721cc696d3cbdd648b5248808e7fef0f8742f518e43b46fa08139
      rhel_8_8:
        url: file:///VirtualMachines/boot/rhel-8.8-x86_64-dvd.iso
        checksum: sha256:517abcc67ee3b7212f57e180f5d30be3e8269e7a99e127a3399b7935c7e00a09
      rhel_9:
        url: file:///VirtualMachines/boot/rhel-9.2-x86_64-dvd.iso
        checksum: sha256:a18bf014e2cb5b6b9cee3ea09ccfd7bc2a84e68e09487bb119a98aa0e3563ac2
      rhel_9_2:
        url: file:///VirtualMachines/boot/rhel-9.2-x86_64-dvd.iso
        checksum: sha256:a18bf014e2cb5b6b9cee3ea09ccfd7bc2a84e68e09487bb119a98aa0e3563ac2

    # The OS installer boot_command will be appended by boot_parameters and boot_start
    # RHEL-compatible boot_command on BIOS
    boot_command: <up><wait><tab><wait> ip=dhcp inst.ks=hd:/dev/sr1:inst.cfg inst.geoloc=0 inst.nosave=all
    # RHEL-compatible boot_command on UEFI
    #boot_command: <up><wait>e<wait><down><down><leftCtrlOn>e<leftCtrlOff> ip=dhcp inst.ks=cdrom:inst.cfg inst.geoloc=0 inst.nosave=all
    # NB. With RHEL on BIOS use '<enter>' to boot, on UEFI must use '<leftCtrlOn>x<leftCtrlOff>'
    boot_start: <enter><wait>

  roles:
    - myllynen.ansible_packer.ansible_packer
